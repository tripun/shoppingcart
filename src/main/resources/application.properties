# ============================================
# SHOPPING CART APPLICATION - DUAL DATABASE SUPPORT
# ============================================

# Application Information
spring.application.name=${APP_NAME:shopping-cart}
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:/api}

# ============================================
# PROFILE CONFIGURATION
# ============================================
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}

# ============================================
# AWS DYNAMODB CONFIGURATION (SECONDARY)
# ============================================
spring.cloud.aws.dynamodb.endpoint=http://localhost:8000
spring.cloud.aws.region.static=us-east-1
spring.cloud.aws.credentials.access-key=dummyaccesskey
spring.cloud.aws.credentials.secret-key=dummysecretkey

# ============================================
# REDIS CONFIGURATION
# ============================================
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=${REDIS_TIMEOUT:2000ms}
spring.data.redis.lettuce.pool.max-active=${REDIS_POOL_MAX_ACTIVE:8}
spring.data.redis.lettuce.pool.max-wait=${REDIS_POOL_MAX_WAIT:-1ms}
spring.data.redis.lettuce.pool.max-idle=${REDIS_POOL_MAX_IDLE:8}
spring.data.redis.lettuce.pool.min-idle=${REDIS_POOL_MIN_IDLE:0}

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=${CACHE_TTL:3600000}
spring.cache.redis.cache-null-values=${CACHE_NULL_VALUES:false}
spring.cache.redis.key-prefix=${CACHE_KEY_PREFIX:shopping-cart:}
spring.cache.redis.use-key-prefix=${CACHE_USE_KEY_PREFIX:true}



# ============================================
# SECURITY CONFIGURATION
# ============================================
# JWT Configuration
app.jwt.secret=${JWT_SECRET:}
app.jwt.expiration=${JWT_EXPIRATION:86400000}
app.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}
app.jwt.header=${JWT_HEADER:Authorization}
app.jwt.prefix=${JWT_PREFIX:Bearer }

# Password Security
app.security.password.min-length=${PASSWORD_MIN_LENGTH:8}
app.security.password.require-special-chars=${PASSWORD_REQUIRE_SPECIAL:true}
app.security.max-login-attempts=${MAX_LOGIN_ATTEMPTS:5}
app.security.lockout-duration=${LOCKOUT_DURATION:300000}

# ============================================
# APPLICATION SPECIFIC CONFIGURATION
# ============================================
# Business Rules
app.cart.max-items=${CART_MAX_ITEMS:100}
app.cart.session-timeout=${CART_SESSION_TIMEOUT:3600000}
app.cart.cleanup-interval=${CART_CLEANUP_INTERVAL:3600000}

# Pricing Configuration
app.pricing.default-region=${DEFAULT_REGION:UK}
app.pricing.default-currency=${DEFAULT_CURRENCY:GBP}
app.pricing.round-up=${PRICE_ROUND_UP:true}
app.pricing.decimal-places=${PRICE_DECIMAL_PLACES:2}

# Discount Configuration
app.discount.max-applicable=${MAX_DISCOUNT_RULES:5}
app.discount.cache-duration=${DISCOUNT_CACHE_DURATION:1800000}

# Inventory Configuration
app.inventory.reserve-timeout=${INVENTORY_RESERVE_TIMEOUT:300000}
app.inventory.low-stock-threshold=${LOW_STOCK_THRESHOLD:10}

# ============================================
# ACTUATOR & MONITORING
# ============================================
management.endpoints.web.exposure.include=${ACTUATOR_ENDPOINTS:health,info,metrics,prometheus}
management.endpoint.health.show-details=${HEALTH_SHOW_DETAILS:when-authorized}
management.metrics.export.prometheus.enabled=${PROMETHEUS_ENABLED:true}
management.info.env.enabled=true

# Health Check Configuration
management.health.redis.enabled=true
management.health.diskspace.enabled=true
management.health.kafka.enabled=true

# ============================================
# LOGGING CONFIGURATION
# ============================================
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.com.example.shoppingcart=${LOG_LEVEL_APP:DEBUG}
logging.level.software.amazon.awssdk=${LOG_LEVEL_AWS:WARN}
logging.level.org.springframework.kafka=${LOG_LEVEL_KAFKA:WARN}

# Log Pattern
logging.pattern.console=${LOG_PATTERN:%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n}
logging.pattern.file=${LOG_PATTERN_FILE:%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n}

# ============================================
# API DOCUMENTATION
# ============================================
springdoc.api-docs.enabled=${API_DOCS_ENABLED:true}
springdoc.swagger-ui.enabled=${SWAGGER_UI_ENABLED:true}
springdoc.swagger-ui.path=${SWAGGER_UI_PATH:/swagger-ui.html}
springdoc.api-docs.path=${API_DOCS_PATH:/v3/api-docs}

# ============================================
# VALIDATION CONFIGURATION
# ============================================
app.validation.enabled=${VALIDATION_ENABLED:true}
app.validation.strict-mode=${VALIDATION_STRICT_MODE:true}

# ============================================
# CORS CONFIGURATION
# ============================================
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
app.cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
app.cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
app.cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}

app.cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}
